<?xml version="1.0" encoding="utf-8"?>
<odoo>
    <data noupdate="1">

        <record id="ESTADISTICO" model="hr.salary.rule.category">
            <field name="name">Estadistico</field>
            <field name="code">ESTADISTICO</field>
        </record>

        <record id="edi_configuration_category_nomina" model="edi.data.configuration.category">
            <field name="name">NOMINA</field>
        </record>
        <record id="edi_configuration_category_comprobante" model="edi.data.configuration.category">
            <field name="parent_id" ref="edi_configuration_category_nomina"/>
            <field name="name">COMPROBANTE</field>
        </record>
        <record id="edi_configuration_category_deducciones" model="edi.data.configuration.category">
            <field name="parent_id" ref="edi_configuration_category_nomina"/>
            <field name="name">DEDUCCIONES</field>
        </record>
        <record id="edi_configuration_category_emisor12" model="edi.data.configuration.category">
            <field name="parent_id" ref="edi_configuration_category_nomina"/>
            <field name="name">EMISOR12</field>
        </record>
        <record id="edi_configuration_category_emisor" model="edi.data.configuration.category">
            <field name="parent_id" ref="edi_configuration_category_nomina"/>
            <field name="name">EMISOR</field>
        </record>
        <record id="edi_configuration_category_nomina12" model="edi.data.configuration.category">
            <field name="parent_id" ref="edi_configuration_category_nomina"/>
            <field name="name">NOMINA12</field>
        </record>
        <record id="edi_configuration_category_percepciones" model="edi.data.configuration.category">
            <field name="parent_id" ref="edi_configuration_category_nomina"/>
            <field name="name">PERCEPCIONES</field>
        </record>
        <record id="edi_configuration_category_receptor12" model="edi.data.configuration.category">
            <field name="parent_id" ref="edi_configuration_category_nomina"/>
            <field name="name">RECEPTOR12</field>
        </record>
        <record id="edi_configuration_category_receptor" model="edi.data.configuration.category">
            <field name="parent_id" ref="edi_configuration_category_nomina"/>
            <field name="name">RECEPTOR</field>
        </record>

        <!-- Configuracion -->
        <record id="edi_configuration_xml_nomina" model="edi.data.configuration.xml">
            <field name="name">CONFIGURACION XML NOMINA</field>
            <field name="model_id" ref="hr_payroll.model_hr_payslip"/>
            <field name="active">True</field>
        </record>

        <record id="edi_configuration_xml_line_tiponomina" model="edi.data.configuration.xml.line">
            <field name="export_id" ref="edi_configuration_xml_nomina"/>
            <field name="categ_id" ref="edi_configuration_category_nomina12"/>
            <field name="name">cfdiTipoNomina</field>
            <field name="code">CFDITIPONOMINA</field>
            <field name="default_type">python</field>
            <field name="sequence">10</field>
            <field name="default_python">
# Available variables:
#----------------------
# payslip: object containing the payslips
# employee: hr.employee object
# contract: hr.contract object
# rules: object containing the rules code (previously computed)
# categories: object containing the computed salary rule categories (sum of amount of all rules belonging to that category).
# worked_days: object containing the computed worked days
# inputs: object containing the computed inputs.

# Note: returned value have to be set in the variable 'result'
result = 'O' if payslip.struct_id.l10n_mx_edi_tiponominaespecial == 'ord' else 'E'                
            </field>
        </record>

        <record id="edi_configuration_xml_line_fechapago" model="edi.data.configuration.xml.line">
            <field name="export_id" ref="edi_configuration_xml_nomina"/>
            <field name="categ_id" ref="edi_configuration_category_nomina12"/>
            <field name="name">cfdiFechaPago</field>
            <field name="code">CFDIFECHAPAGO</field>
            <field name="default_type">python</field>
            <field name="sequence">20</field>
            <field name="default_python">
# Available variables:
#----------------------
# payslip: object containing the payslips
# employee: hr.employee object
# contract: hr.contract object
# rules: object containing the rules code (previously computed)
# categories: object containing the computed salary rule categories (sum of amount of all rules belonging to that category).
# worked_days: object containing the computed worked days
# inputs: object containing the computed inputs.

# Note: returned value have to be set in the variable 'result'
result = payslip.payslip_run_id.cfdi_date_payment if payslip.payslip_run_id.cfdi_date_payment else payslip.cfdi_date_payment                
            </field>
        </record>

        <record id="edi_configuration_xml_line_fechainicialpago" model="edi.data.configuration.xml.line">
            <field name="export_id" ref="edi_configuration_xml_nomina"/>
            <field name="categ_id" ref="edi_configuration_category_nomina12"/>
            <field name="name">cfdiFechaInicialPago</field>
            <field name="code">CFDIFECHAINICIALPAGO</field>
            <field name="default_type">python</field>
            <field name="sequence">30</field>
            <field name="default_python">
# Available variables:
#----------------------
# payslip: object containing the payslips
# employee: hr.employee object
# contract: hr.contract object
# rules: object containing the rules code (previously computed)
# categories: object containing the computed salary rule categories (sum of amount of all rules belonging to that category).
# worked_days: object containing the computed worked days
# inputs: object containing the computed inputs.

# Note: returned value have to be set in the variable 'result'
result = payslip.date_from
            </field>
        </record>

        <record id="edi_configuration_xml_line_fechafinalpago" model="edi.data.configuration.xml.line">
            <field name="export_id" ref="edi_configuration_xml_nomina"/>
            <field name="categ_id" ref="edi_configuration_category_nomina12"/>
            <field name="name">cfdiFechaFinalPago</field>
            <field name="code">CFDIFECHAFINALPAGO</field>
            <field name="default_type">python</field>
            <field name="sequence">40</field>
            <field name="default_python">
# Available variables:
#----------------------
# payslip: object containing the payslips
# employee: hr.employee object
# contract: hr.contract object
# rules: object containing the rules code (previously computed)
# categories: object containing the computed salary rule categories (sum of amount of all rules belonging to that category).
# worked_days: object containing the computed worked days
# inputs: object containing the computed inputs.

# Note: returned value have to be set in the variable 'result'
result = payslip.date_to
            </field>
        </record>

        <record id="edi_configuration_xml_line_numdiaspagados" model="edi.data.configuration.xml.line">
            <field name="export_id" ref="edi_configuration_xml_nomina"/>
            <field name="categ_id" ref="edi_configuration_category_nomina12"/>
            <field name="name">cfdiNumDiasPagados</field>
            <field name="code">CFDINUMDIASPAGADOS</field>
            <field name="default_type">python</field>
            <field name="sequence">50</field>
            <field name="default_python">
# Available variables:
#----------------------
# payslip: object containing the payslips
# employee: hr.employee object
# contract: hr.contract object
# rules: object containing the rules code (previously computed)
# categories: object containing the computed salary rule categories (sum of amount of all rules belonging to that category).
# worked_days: object containing the computed worked days
# inputs: object containing the computed inputs.

# Note: returned value have to be set in the variable 'result'

dias = payslip.dict._get_salary_line_total('C9') or 0.0
if payslip.struct_id.l10n_mx_edi_tiponominaespecial in ['ext_fini', 'ext_nom', 'ext_agui']:
    dias = 1
result = "%d"%dias
            </field>
        </record>

        <record id="edi_configuration_xml_line_fechainiciorellaboral" model="edi.data.configuration.xml.line">
            <field name="export_id" ref="edi_configuration_xml_nomina"/>
            <field name="categ_id" ref="edi_configuration_category_receptor12"/>
            <field name="name">CFDIFECHAINICIORELLABORAL</field>
            <field name="code">CFDIFECHAINICIORELLABORAL</field>
            <field name="default_type">python</field>
            <field name="sequence">60</field>
            <field name="default_python">
# Available variables:
#----------------------
# payslip: object containing the payslips
# employee: hr.employee object
# contract: hr.contract object
# rules: object containing the rules code (previously computed)
# categories: object containing the computed salary rule categories (sum of amount of all rules belonging to that category).
# worked_days: object containing the computed worked days
# inputs: object containing the computed inputs.

# Note: returned value have to be set in the variable 'result'
result = contract.date_start or employee.cfdi_date_start or False
            </field>
        </record>

        <record id="edi_configuration_xml_line_antiguedad" model="edi.data.configuration.xml.line">
            <field name="export_id" ref="edi_configuration_xml_nomina"/>
            <field name="categ_id" ref="edi_configuration_category_receptor12"/>
            <field name="name">CFDIANTIGUEDAD</field>
            <field name="code">CFDIANTIGUEDAD</field>
            <field name="default_type">python</field>
            <field name="sequence">70</field>
            <field name="default_python">
# Available variables:
#----------------------
# payslip: object containing the payslips
# employee: hr.employee object
# contract: hr.contract object
# rules: object containing the rules code (previously computed)
# categories: object containing the computed salary rule categories (sum of amount of all rules belonging to that category).
# worked_days: object containing the computed worked days
# inputs: object containing the computed inputs.

# Note: returned value have to be set in the variable 'result'

FechaInicioRelLaboral = CFDIFECHAINICIORELLABORAL
FechaFinalPago = payslip.date_to +relativedelta(days=+0)
difference = relativedelta(FechaFinalPago, FechaInicioRelLaboral)

years = difference.years
months = difference.months
days = difference.days
p_diff = "P"
if years > 0:
    p_diff += "%sY"%(years)
if months > 0:
    p_diff += "%sM"%(months)
if days > 0 or days==0:
    p_diff += "%sD"%(days)
result = p_diff
            </field>
        </record>

        <record id="edi_configuration_xml_line_tipocontrato" model="edi.data.configuration.xml.line">
            <field name="export_id" ref="edi_configuration_xml_nomina"/>
            <field name="categ_id" ref="edi_configuration_category_receptor12"/>
            <field name="name">CFDITIPOCONTRATO</field>
            <field name="code">CFDITIPOCONTRATO</field>
            <field name="default_type">python</field>
            <field name="sequence">80</field>
            <field name="default_python">
# Available variables:
#----------------------
# payslip: object containing the payslips
# employee: hr.employee object
# contract: hr.contract object
# rules: object containing the rules code (previously computed)
# categories: object containing the computed salary rule categories (sum of amount of all rules belonging to that category).
# worked_days: object containing the computed worked days
# inputs: object containing the computed inputs.

# Note: returned value have to be set in the variable 'result'
result = contract.cfdi_tipocontrato
            </field>
        </record>

        <record id="edi_configuration_xml_line_sindicalizado" model="edi.data.configuration.xml.line">
            <field name="export_id" ref="edi_configuration_xml_nomina"/>
            <field name="categ_id" ref="edi_configuration_category_receptor12"/>
            <field name="name">CFDISINDICALIZADO</field>
            <field name="code">CFDISINDICALIZADO</field>
            <field name="default_type">python</field>
            <field name="sequence">90</field>
            <field name="default_python">
# Available variables:
#----------------------
# payslip: object containing the payslips
# employee: hr.employee object
# contract: hr.contract object
# rules: object containing the rules code (previously computed)
# categories: object containing the computed salary rule categories (sum of amount of all rules belonging to that category).
# worked_days: object containing the computed worked days
# inputs: object containing the computed inputs.

# Note: returned value have to be set in the variable 'result'
result = u'Sí' if contract.cfdi_sindicalizado else 'No'
            </field>
        </record>

        <record id="edi_configuration_xml_line_periodicidadpago" model="edi.data.configuration.xml.line">
            <field name="export_id" ref="edi_configuration_xml_nomina"/>
            <field name="categ_id" ref="edi_configuration_category_receptor12"/>
            <field name="name">CFDIPERIODICIDADPAGO</field>
            <field name="code">CFDIPERIODICIDADPAGO</field>
            <field name="default_type">python</field>
            <field name="sequence">100</field>
            <field name="default_python">
# Available variables:
#----------------------
# payslip: object containing the payslips
# employee: hr.employee object
# contract: hr.contract object
# rules: object containing the rules code (previously computed)
# categories: object containing the computed salary rule categories (sum of amount of all rules belonging to that category).
# worked_days: object containing the computed worked days
# inputs: object containing the computed inputs.

# Note: returned value have to be set in the variable 'result'
result = '99' if CFDITIPONOMINA == 'E' else contract.cfdi_periodicidadpago
            </field>
        </record>

        <record id="edi_configuration_xml_line_cuentabancaria" model="edi.data.configuration.xml.line">
            <field name="export_id" ref="edi_configuration_xml_nomina"/>
            <field name="categ_id" ref="edi_configuration_category_receptor12"/>
            <field name="name">CFDICUENTABANCARIA</field>
            <field name="code">CFDICUENTABANCARIA</field>
            <field name="default_type">python</field>
            <field name="sequence">110</field>
            <field name="default_python">
# Available variables:
#----------------------
# payslip: object containing the payslips
# employee: hr.employee object
# contract: hr.contract object
# rules: object containing the rules code (previously computed)
# categories: object containing the computed salary rule categories (sum of amount of all rules belonging to that category).
# worked_days: object containing the computed worked days
# inputs: object containing the computed inputs.

# Note: returned value have to be set in the variable 'result'
result = employee.bank_account_id and employee.bank_account_id.acc_number or ''
            </field>
        </record>

        <record id="edi_configuration_xml_line_banco" model="edi.data.configuration.xml.line">
            <field name="export_id" ref="edi_configuration_xml_nomina"/>
            <field name="categ_id" ref="edi_configuration_category_receptor12"/>
            <field name="name">CFDIBANCO</field>
            <field name="code">CFDIBANCO</field>
            <field name="default_type">python</field>
            <field name="sequence">120</field>
            <field name="default_python">
# Available variables:
#----------------------
# payslip: object containing the payslips
# employee: hr.employee object
# contract: hr.contract object
# rules: object containing the rules code (previously computed)
# categories: object containing the computed salary rule categories (sum of amount of all rules belonging to that category).
# worked_days: object containing the computed worked days
# inputs: object containing the computed inputs.

# Note: returned value have to be set in the variable 'result'

result = False
if CFDICUENTABANCARIA == '' or len(CFDICUENTABANCARIA) == 18:
    result = False
else:
    result =  employee.bank_account_id and employee.bank_account_id.bank_id and employee.bank_account_id.bank_id.l10n_mx_edi_code or False
            </field>
        </record>

        <record id="edi_configuration_xml_line_salariobasecotapor" model="edi.data.configuration.xml.line">
            <field name="export_id" ref="edi_configuration_xml_nomina"/>
            <field name="categ_id" ref="edi_configuration_category_receptor12"/>
            <field name="name">CFDISALARIOBASECOTAPOR</field>
            <field name="code">CFDISALARIOBASECOTAPOR</field>
            <field name="default_type">python</field>
            <field name="sequence">130</field>
            <field name="default_python">
# Available variables:
#----------------------
# payslip: object containing the payslips
# employee: hr.employee object
# contract: hr.contract object
# rules: object containing the rules code (previously computed)
# categories: object containing the computed salary rule categories (sum of amount of all rules belonging to that category).
# worked_days: object containing the computed worked days
# inputs: object containing the computed inputs.

# Note: returned value have to be set in the variable 'result'
result = payslip.dict._get_salary_line_total('C510D')
            </field>
        </record>

        <record id="edi_configuration_xml_line_salariodiarioint" model="edi.data.configuration.xml.line">
            <field name="export_id" ref="edi_configuration_xml_nomina"/>
            <field name="categ_id" ref="edi_configuration_category_receptor12"/>
            <field name="name">CFDISALARIODIARIOINTEGRADO</field>
            <field name="code">CFDISALARIODIARIOINTEGRADO</field>
            <field name="default_type">python</field>
            <field name="sequence">140</field>
            <field name="default_python">
# Available variables:
#----------------------
# payslip: object containing the payslips
# employee: hr.employee object
# contract: hr.contract object
# rules: object containing the rules code (previously computed)
# categories: object containing the computed salary rule categories (sum of amount of all rules belonging to that category).
# worked_days: object containing the computed worked days
# inputs: object containing the computed inputs.

# Note: returned value have to be set in the variable 'result'
result = payslip.dict._get_salary_line_total('SD')
            </field>
        </record>

        <record id="edi_configuration_xml_line_emisorcurp" model="edi.data.configuration.xml.line">
            <field name="export_id" ref="edi_configuration_xml_nomina"/>
            <field name="categ_id" ref="edi_configuration_category_emisor12"/>
            <field name="name">cfdiEmisorCurp</field>
            <field name="code">CFDIEMISORCURP</field>
            <field name="default_type">python</field>
            <field name="sequence">150</field>
            <field name="default_python">
# Available variables:
#----------------------
# payslip: object containing the payslips
# employee: hr.employee object
# contract: hr.contract object
# rules: object containing the rules code (previously computed)
# categories: object containing the computed salary rule categories (sum of amount of all rules belonging to that category).
# worked_days: object containing the computed worked days
# inputs: object containing the computed inputs.

# Note: returned value have to be set in the variable 'result'
result = payslip.company_id.partner_id.commercial_partner_id.l10n_mx_edi_curp if payslip.company_id.partner_id.commercial_partner_id.l10n_mx_edi_curp != False else None
            </field>
        </record>

        <record id="edi_configuration_xml_line_registropatronal" model="edi.data.configuration.xml.line">
            <field name="export_id" ref="edi_configuration_xml_nomina"/>
            <field name="categ_id" ref="edi_configuration_category_emisor12"/>
            <field name="name">cfdiRegistroPatronal</field>
            <field name="code">CFDIEMISORREGISTROPATRONAL</field>
            <field name="default_type">python</field>
            <field name="sequence">160</field>
            <field name="default_python">
# Available variables:
#----------------------
# payslip: object containing the payslips
# employee: hr.employee object
# contract: hr.contract object
# rules: object containing the rules code (previously computed)
# categories: object containing the computed salary rule categories (sum of amount of all rules belonging to that category).
# worked_days: object containing the computed worked days
# inputs: object containing the computed inputs.

# Note: returned value have to be set in the variable 'result'
result = employee.cfdi_registropatronal_id and employee.cfdi_registropatronal_id.code or False
            </field>
        </record>

        <record id="edi_configuration_xml_line_retiroparcialidad" model="edi.data.configuration.xml.line">
            <field name="export_id" ref="edi_configuration_xml_nomina"/>
            <field name="categ_id" ref="edi_configuration_category_percepciones"/>
            <field name="name">cfdiretiroparcialidad</field>
            <field name="code">CFDIRETIROPARCIALIDAD</field>
            <field name="default_type">python</field>
            <field name="sequence">220</field>
            <field name="default_python">
# Available variables:
#----------------------
# payslip: object containing the payslips
# employee: hr.employee object
# contract: hr.contract object
# rules: object containing the rules code (previously computed)
# categories: object containing the computed salary rule categories (sum of amount of all rules belonging to that category).
# worked_days: object containing the computed worked days
# inputs: object containing the computed inputs.

# Note: returned value have to be set in the variable 'result'
result = employee.cfdi_retiroparcialidad or 0.0
            </field>
        </record>

    </data>
</odoo>
